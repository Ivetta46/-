Ответы на контрольные вопросы: 

1) Основные характеристики С++:  

это статистически типизированный язык. То есть каждая введенная переменная имеет свой тип (он тоже объявляется в момент компиляции), который не может быть изменен позже. 

Язык компилируем. (исходный код, написанный нами, преобразуется компилятором в машинный код)  

Мультипарадигмальный язык. (С++ поддерживает разные стили написания программ (код как в С, ООП, и тд) 

2)  char - целочисленный тип данных (размер 1 байт), хранит любое значение из диапазона от -128 до 127 или от 0 до 255 

   Целочисленные типы данных:   

     1) Int - целое число (4 байта)  

     2) Short int (2 б.) - диапазон от -32768 до 32767 

     3) Long int (4 б.) - диапазон от -2147483648 до 2147483648  

     4) Long long int (8 б.) 

Bool (1 байт) - логический тип, принимающий либо true, либо false 

Float (4 байта) и double (8 байт) - вещественные числа с плавающей точкой, но у float в силу меньшего размера памяти диапазон принимаемых значений меньше, чем у double. 

3) При передаче данных по значению, например, в функцию внешнее значение переменной не может быть изменено. То есть в функции переменная может изменяться, но вне функции значения переменных остаются прежними. 

А при передаче по ссылке происходит передача ссылки на объект, которую мы уже можем изменять в зависимости от задачи. То есть с помощью ссылки можно менять данные. В отличие от передачи данных по значению мы работаем с самими данными, не выполняя их копирование (как в случае передачи данных по значению) 

4) Функция main() является точкой входа в программу. 

 Внутри этой функции находится вся программа.  

Так как выполнение программы начинается с функции main(), то все остальные функции вызываются из нее. Поэтому если ее не будет в программе, то можно получить ошибку, программа не будет работать. Однако при использовании библиотек, функцию main() можно и не писать, так как она (библиотека) сама передает данные в main.  

5) (Препроцессор - это программа, которая выполняет обработку файла исходного кода до начала компиляции.) 

При помощи директивы #include препроцессор добавляет содержимое файла в программу. То есть #include вставляет исходный код из файла.  

#define - создает константу или макроопределение. Она работает подобно команде "найти и заменить" текстового редактора или текстового процессора. После произведенных замен происходит компиляция измененной программы. Так же ее можно использовать, чтобы определить собственные константы. 
6) Cсылка - это указатель, но без & и * (операций разыменования) 

Передача аргументов в функцию по значению означает, что когда функция вызывается, ей передаются в качестве фактических параметров (аргументов) не указанные переменные, а копии значений этих переменных. Сами переменные к этим копиям уже никакого отношения не имеют. 

Для передачи аргумента по ссылке нужно воспользоваться указателями. Передаются адреса переменных, а не их значения. 

Передача массива в функцию: 

ret_type funcName(datatype arrayName[arraySize]) { 

 // ... 

 } 

Или 

template<std::size_t N> void f(int (&arr)[N]) {} 

И другие контейнеры в функции: 

template <typename Container>  

inline void printcontainer(const Container &container) 

Ссылки, используемые в качестве параметров функции, также могут быть константными. Это позволяет получить доступ к аргументу без его копирования, гарантируя, что функция не изменит значение, на которое ссылается ссылка. 

// S- это константная ссылка на переданный аргумент, а не копия аргумента 

void funcName (const int &S) 

{ 

	S = 8;  

} 
