#include <iostream>
#include <vector>

void merge(std::vector<int>& B, int iBegin, int middle, int iEnd, std::vector<int>& A)
{
    int a = iBegin;
    int b = middle;
    for (int i = iBegin; i < iEnd; i++){
        if (a < middle and (b >= iEnd or B.at(a) < B.at(b))){
            A.at(i) = B.at(a);
            a += 1;
        }
        else {
            A.at(i) = B.at(b);
            b += 1;
        }
    }
}

void split(std::vector<int>& B, int iBegin, int iEnd, std::vector<int>& A)
{
    if (iEnd - iBegin <= 1)
        return;
    int middle = (iEnd + iBegin) / 2;
    split(A, iBegin,  middle, B);
    split(A, middle,    iEnd, B);
    merge(B, iBegin, middle, iEnd, A);
}

void sort(std::vector<int>& A){
    std::vector<int> B = A;
    split(B, 0, A.size(), A);
}



int main() {

    int n, x;
    std::cout << "Enter size of array: " << std::endl;
    std::cin >> n;
    std::cout << "Enter your array: " << std::endl;
    std::vector<int> vec(n);
    for(auto i = 0u; i < n; i++) {
        std:: cin >> vec[i];
    }
    sort(vec);
    for (int i: vec) {
        std::cout << i << " ";
    }
}
