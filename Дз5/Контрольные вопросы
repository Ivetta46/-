Ответы на контрольные вопросы: 

1) RAII(“Resource Acquisition is Initialization”) - в конструкторе объект получает доступ к какому-либо ресурсу и сохраняет описатель ресурса в закрытый члена класса, а при вызове деструктора этот ресурс (то есть получение некоторого ресурса совмещается с инициализацией, а освобождение — с уничтожением объекта). 
2) Конструктор — это особый тип метода класса, который автоматически вызывается при создании объекта этого же класса(используются для инициализации переменных-членов класса значениями, которые предоставлены по умолчанию/пользователем, или для выполнения любых шагов настройки, необходимых для используемого класса). 

Конструктор копирования нужен для того, чтобы создавать копии объектов класса. То есть, с помощью конструктора копирования можно получить копию уже существующего объекта. 

 Конструктор копирования должен получать входным параметром константную ссылку на объект такого же класса. 

НазваниеКласса (const  НазваниеКласса& object){  

   // код конструктора копирования 

} 

Деструктор призван очищать всяческий "мусор". Например, если конструктор использует операцию new для выделения памяти, то деструктор должен обратиться к delete для ее освобождения. 

Деструктор не имеет возвращаемого значения и не имеет объявляемого типа.  

В отличие от конструктора, деструктор не может иметь аргументов.  

Таким образом, прототип деструктора класса Stock выглядит следующим образом: 

~Stock ( ) ; 

 

Геттеры -- методы, возвращающие поля (константная ссылка или копия. Нельзя менять возвращенные!) 

Сеттеры -- методы, изменяющие поля 

Конструктор по умолчанию - это конструктор, применяемый для создания объекта, когда не предоставляются явные инициализирующие значения.  

Для класса Stock конструктор по умолчанию будет таким: 

 Stock : : Stock () { } 

Если деструктор не определен, компилятор будет предоставлять его по умолчанию. 

 

 
