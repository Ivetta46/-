Ответы на контрольные вопросы: 

1) Типы наследования: 

is a == является, соответствует открытому (public) наследованию 

is implemented with == сделан с помощью, соответствует множественному наследованию 
  1. public - используется, чтобы сделать это свойство/метод доступным из любого места, других классов и экземпляров объекта(public => public, protected => protected) 

2. private - если необходимо, чтобы свойство/метод было видно только в его собственном классе(public => private, protected => private) 

 3. protected - если нужно сделать свое свойство/метод видимым во всех классах, расширяющих текущий класс, включая родительский класс(public => protected, protected => protected) 

2) protected нужно для наследования, чтобы, с одной стороны, дать возможность скрыть публичные методы/данные, а с другой, позволить пользователю выбирать. 

3) Ключевые слова: 

virtual - пометить метод, чтобы вызывался самый младший из перегруженных методов 

override - указывает, что виртуальная функция переопределяет поведение другой виртуальной функции 

final - указывает, что виртуальная функция не может быть переопределена в производном классе 

4) Чистая виртуальная функция предоставляет собой функцию-член, которая не имеет определения. Это значит, что чистая виртуальная функция должна быть переопределена в производном классе. 

Абстрактные классы - это классы, которые содержат или наследуют без переопределения хотя бы одну чистую виртуальную функцию. 

Абстрактный базовый класс – это класс, который имеет одну или несколько чисто виртуальных функций-членов. 

5) При множественном наследовании возникает проблема неоднозначности. Пусть два базовых класса имеют одну и ту же функцию, которая не переопределяется в производном классе. Если мы попытаемся вызвать функцию, используя объект производного класса, компилятор покажет ошибку(потому что компилятор не знает, какую функцию вызывать). 

В Java проблема множественного наследования просто запрещена.  
 
